[gcode_macro prepare_bed]
gcode:
	G28
	CONNECT_PROBE_PHASE_I
	Z_TILT_ADJUST
	CALIBRATE_Z

[gcode_macro measure_resonances]
gcode:
	{% set HZ_PER_SEC = params.HZ_PER_SEC|default(1)|int %} #Parse parameters
	{% if printer.toolhead.homed_axes != 'xyz' %} #home if not homed
		G28
	{% endif %}
	TEST_RESONANCES AXIS=X HZ_PER_SEC={ HZ_PER_SEC }
	TEST_RESONANCES AXIS=Y HZ_PER_SEC={ HZ_PER_SEC }
	RUN_SHELL_COMMAND CMD=shaper_calibrate

[gcode_shell_command shaper_calibrate]
command: bash /home/trident/printer_data/config/shaper_calibrate.sh
timeout: 600.
verbose: True

[gcode_macro accel_test]
gcode:
	{% set speed = params.SPEED|default(500)|int * 60 %} #Parse parameters
	{% set safety_margin = params.SAFETY_MARGIN|default(30)|int %}
	{% set start_accel = params.START_ACCEL|default(5000)|int %}
	{% set accel_increment = params.ACCEL_INCREMENT|default(1000)|int %}
	{% set steps = params.STEPS|default(5)|int %}
	
	{% set x_max = printer.toolhead.axis_maximum.x - safety_margin %} #Calculate safety margins
	{% set x_min = printer.toolhead.axis_minimum.x + safety_margin %}
	{% set y_max = printer.toolhead.axis_maximum.y - safety_margin %}
	{% set y_min = printer.toolhead.axis_minimum.y + safety_margin %}

	SET_VELOCITY_LIMIT ACCEL=500										#safe 500 mmsec accel

	{% if printer.toolhead.homed_axes == "" %} #Home if needed
		G28
	{% endif %}
	DISCONNECT_PROBE_PHASE_I
	G90
	G1 Z50 F{printer["gcode_macro _GLOBAL_VARIABLES"].speed_z}
	G1 X{ x_min} Y{ y_min} F6000
	{% for each in range(steps) %}
		{% set accel = start_accel + (each * accel_increment) %}
		SET_VELOCITY_LIMIT ACCEL={ accel } ACCEL_TO_DECEL={ accel/2 }
		RESPOND MSG=" ACCEL={ accel } ACCEL_TO_DECEL={ accel/2 } "
		G1 X{ x_max } Y{ y_max } F{speed} #diagonal move to endstops
		G1 X{ x_max } Y{ y_min } F{speed} #square move bottom right
		G1 X{ x_min } Y{ y_min } F{speed}	#square move bottom left
		G1 X{ x_min } Y{ y_max } F{speed}	#square move top left
		G1 X{ x_max } Y{ y_max } F{speed} #square move top right
		G1 X{ x_min } Y{ y_min } F{speed} #diagonal move to initial position
	{% endfor %}


	{% set speed = params.SPEED|default(500)|int * 60 %} #Parse parameters
	{% set safety_margin = params.SAFETY_MARGIN|default(30)|int %}
	{% set start_accel = params.START_ACCEL|default(5000)|int %}
	{% set accel_increment = params.ACCEL_INCREMENT|default(1000)|int %}
	{% set steps = params.STEPS|default(5)|int %}

	{% set x_max = printer.toolhead.axis_maximum.x - safety_margin %} #Calculate safety margins
	{% set x_min = printer.toolhead.axis_minimum.x + safety_margin %}
	{% set y_max = printer.toolhead.axis_maximum.y - safety_margin %}
	{% set y_min = printer.toolhead.axis_minimum.y + safety_margin %}

	{% for each in range(steps) %}
		{% set accel = start_accel + (each * accel_increment) %}
		RESPOND MSG=" ACCEL={ accel } ACCEL_TO_DECEL={ accel/2 } "
	{% endfor %}
#########################################
###         FILAMENT MACROS           ###
#########################################


[gcode_macro FILAMENT_EJECT]
gcode:
	M109 S220
	M83
	G1 E-200 F500
	RESPOND PREFIX=tgalarm MSG="Filament ejected"
	M104 S0

[gcode_macro FILAMENT_INSERT_PREHEAT]
gcode:
	M109 S250
	RESPOND PREFIX=tgalarm MSG="Preheated, insert filament, run "
	G4 P1000
	RESPOND PREFIX=tgnotify MSG="/FILAMENT_INSERT"

[gcode_macro FILAMENT_INSERT]
gcode:
	M109 S250
	M83
	G1 E100 F250
	M104 S0