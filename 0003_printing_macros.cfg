#########################################
###        START_PRINT MACROS         ###
#########################################



#Phase I for print start, gets all slicer parameters and stores them in _GLOBAL_VARIABLES to prevent
#desync in local/global variables
[gcode_macro _START_PRINT_PHASE_I]
gcode:
	# Get and set extruder temperature
	{% if params.EXTRUDER_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=extruder_temp VALUE={params.EXTRUDER_TEMP|float}
	{% endif %}

	# Get and set bed temperature
	{% if params.BED_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=bed_temp VALUE={params.BED_TEMP|float}
	{% endif %}

	# Get and set chamber temperature
	{% if params.CHAMBER_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=chamber_temp VALUE={params.CHAMBER_TEMP|float}
	{% endif %}

	# Get and set pressure advance
	{% if params.PA is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=pa VALUE={params.PA|float}
	{% endif %}

	# Get and set z_adjust
	{% if params.Z_ADJUST is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=z_adjust VALUE={params.Z_ADJUST|float}
	{% endif %}



#Apply values received from slicer to prepare print.
#Initiated from slicer.
[gcode_macro _START_PRINT_PHASE_II]
gcode:
	M140 S{ (printer["gcode_macro _GLOBAL_VARIABLES"].bed_temp + 30)  } #Bed heats very slowly, big delta to surface, "overheat" to compensate.
	CLEAR_PAUSE
	M25
	SET_PRESSURE_ADVANCE ADVANCE={ printer["gcode_macro _GLOBAL_VARIABLES"].pa }
	G28		#Home, absolute and move to soak position
	G90
	M83
	G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y } Z{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_z } F6000
	M84
	UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III_I DURATION=0.1																#Proceed to phase III



[delayed_gcode _START_PRINT_PHASE_III_I]
#description: Waits for initial bed overheating to compensate slow soak
gcode:
	{% if printer.heater_bed.power < 1 %}
		#check if "overheat" temperature is reached/almost reached by checking pwm status. <1 means we are close to it.
		M140 S{ printer["gcode_macro _GLOBAL_VARIABLES"].bed_temp } #set real bed temperature
		M104 S{ printer["gcode_macro _GLOBAL_VARIABLES"].extruder_temp }
		{% if printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp > 0 %}
			G28
			G90
			G1 X{ printer.configfile.settings.stepper_x.position_max / 2 } Y{ printer.configfile.settings.stepper_y.position_max / 2 } Z{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_z } F6000
			M107 S100 # move to bed center and turn on part fan to boost heat dumping into chamber if we need to heat chamber as well
			M84
		{% endif %}
		UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III_II DURATION=0.1	#exit cycle
	{% else %}
		RESPOND MSG="Waiting for bed overheating"
		UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III_I DURATION=10	#Continue wait
	{% endif %}




[delayed_gcode _START_PRINT_PHASE_III_II]
#description: Final waiting for chamber, nozzle, bed
gcode:
		{% if ( ((printer.extruder.temperature >= printer.extruder.target) and (printer.extruder.power <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_extruder)) and
				((printer.heater_bed.temperature >= printer.heater_bed.target) and (printer.heater_bed.power  <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_bed)) and
				((printer["temperature_sensor chamber"].temperature >= printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp)) ) %}
			#1. Extruder has reached the target (or does not need to be heated) and has soaked enough heat
			#2. Bed has reached the target (or does not need to be heated) and has soaked enough heat
			#3. Chamber has reached the target (or does not need to be heated)
			_START_PRINT_PHASE_IV #We are ready to print, proceed
		{% else %}
			RESPOND MSG="Waiting for bed, extruder, chamber"
			UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III_II DURATION=10
		{% endif %}


#Final homing and secondary preparations
[gcode_macro _START_PRINT_PHASE_IV]
description: Homing, z_offset adjustements, probing
gcode:
	G28							#home warm
	CONNECT_PROBE_PHASE_I		#attach probe
	Z_TILT_ADJUST				#Adjust z axis
	CALIBRATE_Z					#Calibrate nozzle offset
	SET_GCODE_OFFSET Z_ADJUST={ printer["gcode_macro _GLOBAL_VARIABLES"].z_adjust } #adjust z offset
	DISCONNECT_PROBE_PHASE_I 	#Remove probe
	G1 E3 F150
	RESPOND PREFIX=timelapse MSG=start						#start lapse
	#Add purge line later (maybe)
	M24														#unpause



#########################################
###          END_PRINT MACROS         ###
#########################################
[gcode_macro END_PRINT]
gcode:
	TURN_OFF_HEATERS
	RESPOND PREFIX=timelapse MSG=photo
	G90 #Absolute
	M83 #Relative extruder
	G1 E-3 F3000	#retract 15mm
	{% if (printer.toolhead.position.z + 10) <= printer.configfile.settings.stepper_z.position_max %}
		#Check if we have space to move table down 10mm
		G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
		RESPOND MSG=" G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }"
	{% else %}
		G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
		RESPOND MSG="G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }"
	{% endif %}
	RESPOND PREFIX=timelapse MSG=stop
	G90 #Absolute move x,y to home
	G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y } F3000
	M107 ; turn off fan
	M84; turn off motors
	RESPOND PREFIX=timelapse MSG=create


#########################################
###        CANCEL_PRINT MACROS        ###
#########################################

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
	UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III_I DURATION=0
	UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III_II DURATION=0
	CANCEL_PRINT_BASE
	TURN_OFF_HEATERS
	G90 #Absolute
	M83 #Relative extruder
	G1 E-3 F3000	#retract 15mm
	{% if (printer.toolhead.position.z + 10) <= printer.configfile.settings.stepper_z.position_max %}
		#Check if we have space to move table down 10mm
		G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
	{% else %}
		G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
	{% endif %}
	G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y } F12000
	M107 ; turn off fan
	M84; turn off motors
	CLEAR_PAUSE
    SDCARD_RESET_FILE