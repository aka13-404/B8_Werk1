#########################################
###        START_PRINT MACROS         ###
#########################################




#Phase I for print start, gets all slicer parameters and stores them in _GLOBAL_VARIABLES to prevent
#desync in local/global variables
[gcode_macro _START_PRINT_PHASE_I]
gcode:
	# Get and set extruder temperature
	{% if params.EXTRUDER_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=extruder_temp VALUE={params.EXTRUDER_TEMP|float}
	{% endif %}

	# Get and set bed temperature
	{% if params.BED_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=bed_temp VALUE={params.BED_TEMP|float}
	{% endif %}

	# Get and set chamber temperature
	{% if params.CHAMBER_TEMP is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=chamber_temp VALUE={params.CHAMBER_TEMP|float}
	{% endif %}

	# Get and set pressure advance
	{% if params.PA is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=pa VALUE={params.PA|float}
	{% endif %}

	# Get and set z_adjust
	{% if params.Z_ADJUST is defined %}
		SET_GCODE_VARIABLE MACRO=_GLOBAL_VARIABLES VARIABLE=z_adjust VALUE={params.Z_ADJUST|float}
	{% endif %}




#Apply values received from slicer to prepare print.
#Initiated from slicer.
[gcode_macro _START_PRINT_PHASE_II]
gcode:
	CLEAR_PAUSE
	M25
	SET_PRESSURE_ADVANCE ADVANCE={ printer["gcode_macro _GLOBAL_VARIABLES"].pa }
	G28		#Home, absolute and move to soak position
	G90
	M83
	G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y } Z{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_z } F6000
	{% if printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp == 0 %} #check if we need to heat chamber; if not, directly heat extruder and plate
		M104 S{ printer["gcode_macro _GLOBAL_VARIABLES"].extruder_temp }
		M140 S{ printer["gcode_macro _GLOBAL_VARIABLES"].bed_temp }
	{% else %}
		M140 S{ printer["gcode_macro _GLOBAL_VARIABLES"].bed_temp }		#if chamber heating is needed, heat bed only;
	{% endif %}
	UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III DURATION=0.1																#Proceed to phase III




#Run all needed checks if printer is ready for printing
#Initiated by phase II
[delayed_gcode _START_PRINT_PHASE_III]
gcode:
	{% if printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp == 0 %}
		#check if we need to heat chamber; if not, check only extruder and bed, which were set in _START_PRINT_PHASE_II
		{% if ( ((printer.extruder.temperature >= printer.extruder.target) and (printer.extruder.power <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_extruder)) and
			((printer.heater_bed.temperature >= printer.heater_bed.target) and (printer.heater_bed.power  <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_bed)) ) %}
			#1. Extruder has reached the target (or does not need to be heated) and has soaked enough heat
			#2. Bed has reached the target (or does not need to be heated) and has soaked enough heat
			_START_PRINT_PHASE_IV #We are ready to print, proceed
		{% else %}
			RESPOND MSG="Waiting for bed and extruder"
			UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III DURATION=5
		{% endif %}
	{% else %}
		#Chamber needs to be heated; Only bed heating was turned on.
		#Check if chamber temperature has been reached, if so - he
		{% if printer["temperature_sensor chamber"].temperature >= printer["gcode_macro _GLOBAL_VARIABLES"].chamber_temp %}
			{% if printer.extruder.target == 0 %} #enable heater, if it was not turned on yet
				M104 S{ printer["gcode_macro _GLOBAL_VARIABLES"].extruder_temp }
			{% else %}
				{% if ( ((printer.extruder.temperature >= printer.extruder.target) and (printer.extruder.power <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_extruder)) and
				((printer.heater_bed.temperature >= printer.heater_bed.target) and (printer.heater_bed.power  <= printer["gcode_macro _GLOBAL_VARIABLES"].pwm_soaked_bed)) ) %}
				#1. Extruder has reached the target (or does not need to be heated) and has soaked enough heat
				#2. Bed has reached the target (or does not need to be heated) and has soaked enough heat
					_START_PRINT_PHASE_IV #We are ready to print, proceed
				{% else %}
					RESPOND MSG="Waiting for bed and extruder"
					UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III DURATION=5
				{% endif %}
			{% endif %}
		{% else %}
			RESPOND MSG="Waiting for chamber"
			UPDATE_DELAYED_GCODE ID=_START_PRINT_PHASE_III DURATION=5
		{% endif %}
	{% endif %}


#Final homing and secondary preparations
[gcode_macro _START_PRINT_PHASE_IV]
gcode:
	G28							#home warm
	_CONNECT_PROBE_PHASE_I		#attach probe
	Z_TILT_ADJUST				#Adjust z axis
	CALIBRATE_Z					#Calibrate nozzle offset
	SET_GCODE_OFFSET Z_ADJUST={ printer["gcode_macro _GLOBAL_VARIABLES"].z_adjust } #adjust z offset
	_DISCONNECT_PROBE_PHASE_I 	#Remove probe
	G1 E15 F150
	RESPOND PREFIX=timelapse MSG=start						#start lapse
	#Add purge line later (maybe)
	M24														#unpause



#########################################
###          END_PRINT MACROS         ###
#########################################
[gcode_macro END_PRINT]
gcode:
	TURN_OFF_HEATERS
	RESPOND PREFIX=timelapse MSG=photo
	G90 #Absolute
	M83 #Relative extruder
	G1 E-10 F3000	#retract 15mm
	{% if (printer.toolhead.position.z + 10) <= printer.configfile.settings.stepper_z.position_max %}
		#Check if we have space to move table down 10mm
		RESPOND MSG="We have space"
		RESPOND MSG="{ printer.toolhead.position.z }"
		G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
		RESPOND MSG=" G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }"
	{% else %}
		RESPOND MSG="We have no space"
		RESPOND MSG="{ printer.toolhead.position.z }"
		G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
		RESPOND MSG="G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }"
	{% endif %}
	RESPOND PREFIX=timelapse MSG=stop
	G90 #Absolute move x,y to home
	G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y } F3000
	M107 ; turn off fan
	M84; turn off motors
	RESPOND PREFIX=timelapse MSG=create


#########################################
###        CANCEL_PRINT MACROS        ###
#########################################

[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
	CANCEL_PRINT_BASE
	TURN_OFF_HEATERS
	G90 #Absolute
	M83 #Relative extruder
	G1 E-10 F3000	#retract 15mm
	{% if (printer.toolhead.position.z + 10) <= printer.configfile.settings.stepper_z.position_max %}
		#Check if we have space to move table down 10mm
		RESPOND MSG="We have space"
		RESPOND MSG="{ printer.toolhead.position.z }"
		G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
		RESPOND MSG=" G1 Z{ printer.toolhead.position.z + 10 } F{ printer.configfile.settings.printer.max_z_velocity * 60 }"
	{% else %}
		RESPOND MSG="We have no space"
		RESPOND MSG="{ printer.toolhead.position.z }"
		G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }
		RESPOND MSG="G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer.configfile.settings.printer.max_z_velocity * 60 }"
	{% endif %}
	G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].soak_position_y } F12000
	M107 ; turn off fan
	M84; turn off motors
	CLEAR_PAUSE
    SDCARD_RESET_FILE