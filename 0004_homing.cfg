

#Waiting for better times
#[homing_override]
#
#gcode:
#	G90 #Absolute
#
#	###Move away from bed surface
#	{% if "z" in printer.toolhead.homed_axes %}
#	#Check if Z is homed. We assume, that Z is unlikely to be homed AND in a wrong position
#	#If the z axis reads as homed, but is somewhere in an unexpected location, this could backfire
#		{% if (printer.toolhead.position.z + 10) <= printer.configfile.settings.stepper_z.position_max %}
#		#Move 10mm or as far as we can
#			G1 Z{ printer.toolhead.position.z + 10 } F{ printer["gcode_macro _GLOBAL_VARIABLES"].speed_z * 60 }
#		{% else %}
#			G1 Z{ printer.configfile.settings.stepper_z.position_max } F{ printer["gcode_macro _GLOBAL_VARIABLES"].speed_z * 60 }
#		{% endif %}
#	{% else %}
#		# If z is not homed, assume 0 and move 10, god help us all
#		SET_KINEMATIC_POSITION Z=0
#		G1 Z10 F{ printer["gcode_macro _GLOBAL_VARIABLES"].speed_z * 60 }
#	{% endif %}
#
#	###Home axis
#	#Z
#	{% if ("Z" in params) or ("" == params) %}
#	#if Z or all axis have to be homed, x,y have to be homed to be sure
#	#This will lead to all axis being homed
#		G28 Y
#		G28 X
#		G1 X{ printer["gcode_macro _GLOBAL_VARIABLES"].endstop_position_z_x } Y{ printer["gcode_macro _GLOBAL_VARIABLES"].endstop_position_z_y } F{ printer["gcode_macro _GLOBAL_VARIABLES"].speed_xy }
#		G28 Z
#	#X
#	{% elif "X" in params %}
#	#if X needs to be homed, it has to happen away from Y min, so we check and home Y if needed
#	#This will lead to Y being homed either way, so we don't care about G28 X Y
#		{% if "y" in printer.toolhead.homed_axes %}
#			G1 Y{ printer.configfile.settings.stepper_y.position_max } F{ printer["gcode_macro _GLOBAL_VARIABLES"].speed_xy }
#			G28 X
# 		{% else %}
#			G28 Y
#			G28 X
#		{% endif %}
#	#Y
#	{% elif "Y" in params %}
#	#Y can be homed without additional problems
#		G28 Y
#	#Unexpected params
#	{% else %}
#		RESPOND PREFIX=tgalarm MSG="Something bad happened with homing"
#		M112 #Crashing this plane with no survivors
#	{% endif %}


[safe_z_home]
z_hop: 10
speed: 100
move_to_previous: False